<<echo=FALSE, message=FALSE>>=
library(knitr)
opts_knit$set(root.dir = "results")
setwd("results")
@

\section*{Results}

TODO description of the dataset here

* experiment goal

* design

* source

* express the idea that shis is just simple example that could be scaled up



First of all, we load the necessary libraries (see availability section for installation instructions):
<<message=FALSE>>=
library(damr)      # input DAM2 data
library(zeitgebr)  # periodogram computation
library(sleepr)    # sleep analysis
library(ggetho)    # behaviour visualisation
@

Then, the metadata file is read and linked to the \texttt{.txt} result files.

<<cache=TRUE>>=
metadata <- link_dam2_metadata("metadata.csv",".")    # linking
# print(metadata)                                     # check metadata
dt <- load_dam2(metadata)                             # loading
summary(dt)                                           # quick summary
@

\subsection*{Preprocessing}
We notice, from the metadata, that the two replicates do not have the same time in baseline.
We would like to express the time relative to the important event: the transition to \texttt{LL}. 
To do so, we subtract the \texttt{baseline\_days} metavariable from the \texttt{t} variable.
This gives us an opportunity to illustrate the use \texttt{xmv()}, which expands metavariables as variables.
In addition, we use the \texttt{data.table} syntax to create, in place, a \texttt{moving} variable.
It is \texttt{TRUE} when and only when \texttt{activity} is greater than zero:

<<message=F, results="hide", cache=TRUE>>=
# baseline subtraction -- note the use of xmv
dt[,t := t - days(xmv(baseline_days))]
dt[, moving :=  activity > 0]  
@

<<cache=TRUE>>=
summary(dt)
@

To simplify visualisation, we create our own \texttt{label} metavariable, as combination of a number and \texttt{genotype}.
In the restricted context of this analysis, \texttt{label} acts a unique identifier.
Importantly, we keep \texttt{id} , which is more rigorous and universal.



<<message=FALSE, results="hide", cache=TRUE>>=
dt[, label := interaction(1:.N, genotype), meta=T]
print(dt)
@


\subsection*{Curation}
It is important to visualise an overview of how each individual behaved and, if necessary, alter the data accordingly. For this, we generate a tile plot (Fig~\ref{fig:fig-3}A).

\begin{figure}[!h]
	\includegraphics[width=1\textwidth]{fig/fig-3.pdf}
	\caption{{\bf Experiment quality control.}
			Tile plot representing the fraction of time spent moving as a colour intensity.
			Each individual is represented by a row and time, on the x axis, is binned in 30 minute.}
	\label{fig:fig-3}
\end{figure}

<<cache=TRUE>>=
# make a ggplot object with label on the y and moving on the z axis
fig3A <- ggetho(dt, aes(y = label, z = moving)) +  
  # show data as a tile plot
  # that is z is a pixel whose intensity maps moving
  stat_tile_etho() +                  
  # add layers to draw annotations to show L and D phases
  # as white and black, respectivelly
  # the first layer is for the baseline (until t = 0)
  stat_ld_annotations(x_limits = c(dt[,min(t)], 0)) +
  # in the 2nd one, we start at 0 and use grey 
  # instead of black as we work in LL
  stat_ld_annotations(x_limits = c(0, dt[, max(t)]), 
                      ld_colours = c("white", "grey"))
@

Activity of dead or escaped animals is falsely scored as long series of zeros (see, for instance, individual 30 and 18 in Fig~\ref{fig:fig-3}A).
Our \texttt{sleepr} package offer a tool to detect and remove such artefactual data.
The updated version can be visualised in Fig~\ref{fig:fig-3}B.

<<cache=TRUE>>=
# remove data after death
dt <- sleepr::curate_dead_animals(dt, moving)
# same as above
fig3B <- ggetho(dt, aes(y = label, z = moving)) +  
    stat_tile_etho() +                  
    stat_ld_annotations(x_limits = c(dt[, min(t)], 0)) +
    stat_ld_annotations(x_limits = c(0, dt[, max(t)]), 
                        ld_colours = c("white", "grey"))
@

For the purpose of this example, we keep only individuals that have \emph{at least five days in LL}.
<<cache=TRUE>>=
# for each id, we check for validity
valid_dt <- dt[, .(valid = max(t) > days(5)), by = id]
# a vector of all valid ids
valid_ids <- valid_dt[valid == T, id]
# filter dt with the valid ids
dt <- dt[id %in% valid_ids]
summary(dt)
@

Note that as a result, we now have \Sexpr{nrow(dt[meta=T])} ``valid''individuals.


\subsection*{Double plotted actograms}
``Double-plotted actograms'' are a common visualisation of periodicity and rhythmicity in circadian experiments.
In  \nameref{S1-Fig}A, we show the double-plotted actograms of each animals:

<<cache=TRUE>>=
# we also show a subset of this figure in supplementary materials
figS1A <- ggetho(dt, aes(z = moving), multiplot = 2) +
            # bars n the z axis could 
            #  one could also use stat_tile_etho
            stat_bar_tile_etho() + 
            # divide plot by individual
            facet_wrap( ~ label, ncol = 4) +
            # rename the y axis
            scale_y_discrete(name="Day")
@
<<cache=TRUE, echo=FALSE>>=
fig_4_picked_labels = paste(c(5,10,33,39, 13,17,22,51), rep(c("NKCCOX/+", "Tim/NKCCOX"), each=4), sep=".")

fig4A <- ggetho(dt[xmv(label) %in% fig_4_picked_labels],
						 aes(z = moving), multiplot = 2) +
	stat_bar_tile_etho() + 
	facet_wrap( ~ label, ncol = 4) +
	scale_y_discrete(name="Day")
@


\subsection*{Periodograms}
Ultimately, in order to quantify periodicity and rhythmicity, we compute periodograms.
In several methods are implemented in \texttt{zeitbebr}. In this example, we generate $\chi{}^2$ periodrograms and lay them out in a grid.
A representative sample of all animals is shown in Fig~\ref{fig:fig-4}B (see \nameref{S1-Fig}B for all individuals).

<<cache=TRUE>>=
dt_ll <- dt[t > days(1)]
per_dt <- periodogram(moving, 
                    	dt_ll, 
                    	resample_rate = 1/mins(10),
                    	FUN=chi_sq_periodogram)
                    	
per_dt <- find_peaks(per_dt)
# we also show a subset of this figure in supplementary materials
figS1B <- ggperio(per_dt, aes(y = power, peak=peak)) + 
                  # periododogram drawn as a line
                  geom_line() +
                  # the significance line in red
                  geom_line(aes(y = signif_threshold), colour="red") + 
                  # point and text at the peak
                  geom_peak() + 
                  # divide plot by individual
                  facet_wrap( ~ label, ncol = 4) 
@



<<cache=TRUE, echo=FALSE>>=
fig4B <- ggperio(per_dt[xmv(label) %in% fig_4_picked_labels],
aes(y = power, peak=peak)) + 
# periododogram drawn as a line
geom_line() +
# the significance line in red
geom_line(aes(y = signif_threshold), colour="red") + 
# point and text at the peak
geom_peak() + 
# divide plot by individual
facet_wrap( ~ label, ncol = 4) 
@



\begin{figure}[!h]
	\includegraphics[width=1\textwidth]{fig/fig-4.pdf}
	\caption{{\bf Visualisation of the periodicity in activity of eight representative animals.}
		A: Double plotted actograms showing activity over the experiment. Transition to LL happens at day 0.
		B: $\chi{}^2$ periodograms over the LL part of the experiment matching the animals in A.
		Titles on top of each facet refer to the label allocated to each individual.
		A version of this figure with all animals is available \nameref{S1-Fig}.
	}
	\label{fig:fig-4}
\end{figure}

\subsection*{Population statistics}
Both double-plotted actograms and periodograms suggest that NKCCOX/+ flies are mostly 
arhythmic in LL whilst Tim/NKCCOX appear to have a consistent, long-period rhythm.
To visualise this at the population scale, we can plot an average periodogram (see Fig~\ref{fig:fig-5}A):

<<cache=TRUE, warning=FALSE,message=FALSE, result="hide">>=
fig5A <- ggperio(per_dt, aes(y = power - signif_threshold,
                             colour = genotype)) + 
          # periododogram a line for population mean
          # and bootstrap error bars
          stat_pop_etho(method = ggplot2::mean_cl_boot) +
          # rename x and y axis 
          scale_y_continuous(name="Relative power") + 
          scale_x_hours("Period")
@



\begin{figure}[!h]
	\includegraphics[width=1\textwidth]{fig/fig-5.pdf}
	\caption{{\bf Population statistics on circadian phenotype.}
			A: Average periodograms. 
			      The aggregated relative power of the periodogram of all animals.
			      The lines shows and the shaded areas show population means and their 95\% bootstrap confidence interval, respectively.
			B: Peak periodicity power and average.
			      Values of the peak period for animals with a significant peak.
			      Individual animals are shown by dots whose size represent power of the peak period.
			      The error bars are 95\% bootstrap confidence interval on the population mean.
			C: Frequencies of rhythmic animals.
			      Number of rhythmic animals (\emph{i.e.} with a significant peak) in each genotypes.
			      Dark and clear fillings indicate rhythmic and arhythmic animals, respectively.
			      }
	\label{fig:fig-5}
\end{figure}


To further quantify this difference, we can show the value of the peak for both groups (see Fig~\ref{fig:fig-5}B). First of all, we compute a summary per individual (\texttt{by=id}):

<<cache=TRUE, warning=FALSE, results="hide">>=

summary_dt <- per_dt[,.(
                        first_peak_period = period[peak==1],
                        first_peak_power = power[peak==1],
                        is_rhythmic = any(peak==1)),
                      by=id]


# rejoin metadata
summary_dt <- rejoin(summary_dt)
@

\texttt{summary\_dt} is just a regular data frame with one row per individual, containing both metadata and our summary statistics. It can therefore be used directly by \texttt{ggplot} and such:

<<>>=
# standard ggplot
fig5B <- ggplot(summary_dt, aes(y = first_peak_period,
                                x = genotype)) + 
              # draw the mean of each genotype group
              stat_summary(fun.y = mean, geom = "point", shape=3) +
              # draw bootstrap confidence intervals
              stat_summary(fun.data = mean_cl_boot, geom = "errorbar") +
              # shows all individuals as points. 
              # the size of the point expresses the power of the peak
              geom_jitter(aes(colour= genotype, 
                              size=first_peak_power),
                          alpha=.67) +
              # We would like to convert time in hour
              scale_y_hours("Period")
@

To convey that Tim/NKCCOX mutants are more rhythmic, we could represent the proportion of rhythmic flies (see Fig~\ref{fig:fig-5}C):
<<cache=TRUE, warning=FALSE, results="hide">>=
# standard ggplot
fig5C <- ggplot(summary_dt, aes(x = genotype,
                                fill = genotype,
                                alpha = is_rhythmic
                                )) +
              geom_bar(colour="black")

@

\texttt{R} provide one of the richest statistical toolbox available, which allows users to go deeper in he analysis of the extracted variables.
One could, for instance, perform a $\chi{}^2$ test on the number of rhythmic vs arhythmic flies in both genotypes.
To address the same question, we fit a binomial generalised linear model, which shows a strong positive effect of ($p$-value $< 10^{-5}$):
<<>>=
fit <- glm(is_rhythmic ~ genotype, summary_dt, family="binomial")

summary(fit)$coefficients
@

Lastly, we can generate a table that compute arbitrary population statistics for each genotype:
<<warning=FALSE>>=
result_dt <- summary_dt[,
          .(
            mean_period = mean(first_peak_period, na.rm = T) / hours(1),
            sd_period = sd(first_peak_period, na.rm = T) / hours(1),
            n_rhythmic = sum(is_rhythmic),
            n = .N
            ),
          by = genotype
          ]
result_dt
@


Some conclusion here, TODO:

* high scalability

* reproducibility

* from raw data to publication-quality figures

* flexibility


<<r, eval=TRUE, echo=FALSE, message=FALSE, result="hide",cache=TRUE, warning=FALSE>>=
################################ CODE BELOW FOR COSMETIC ALTERATIONS OF FIGURES
library(cowplot)
my_theme <- theme(axis.title.y=element_blank(),
            axis.text.y=element_blank(),
            axis.ticks=element_blank(),
            axis.line = element_blank(),
            panel.border = element_blank(),
            legend.position="none")


legend <- fig3A + theme(axis.title=element_blank(),
                        axis.text.x=element_blank(),
                        axis.ticks=element_blank(),
                        axis.line = element_blank(),
                        #axis.ticks.y=element_blank(),
                        panel.border = element_blank(),
                        #legend.text = "moving",
                        legend.position="left") + 
                  coord_cartesian(xlim=-days(c(10, 9))) + scale_y_discrete(position = "right")


fig3 <- cowplot::plot_grid(
                          legend,
                          fig3A +  my_theme,
                          fig3B +  my_theme,
                          nrow=1,
                          labels=c("A", "", "B"),
                          rel_widths = c(1, 2, 2),
                          label_size = 32,
                          axis="b",
                          align="h",
                          hjust=0, vjust=1.01
                          )
pdf("../fig/fig-3.pdf",w=12,h=12)
print(fig3)
tmp  <- dev.off()

#=================================================
figS1A <- figS1A +  theme(strip.text.x = element_text(size =8))
figS1B <- figS1B +  theme(strip.text.x = element_text(size =8))

figS1 <- cowplot::plot_grid(
                          figS1A,
                          figS1B,
                          nrow=1,
                          labels=c( "A", "B"),
                          label_size = 32,
                          align="v",
                          axis="b",
                          hjust=0, vjust=1.01
                          )

pdf("../fig/fig-S1.pdf",w=12,h=16)
print(figS1)
tmp <- dev.off()

#===================================================

fig4 <- cowplot::plot_grid(
				fig4A,
				fig4B,
				nrow=1,
				labels=c("A", "B"),
				align="v",
				axis="b",
				label_size = 32,
				hjust=0, vjust=1.01
)

pdf("../fig/fig-4.pdf",w=12,h=4)
print(fig4)
tmp  <- dev.off()


#=================================================

fig5 <- cowplot::plot_grid(fig5A + theme(legend.position="none"),
                           fig5B + theme(legend.position="bottom"),
                           fig5C + theme(legend.position="none"),
                           nrow=1,
                           label_size = 32,
                           align = "hv",
                           axis="b",
                           labels=c( "A", "B", "C"),
                           hjust=0, vjust=1.01
                           #?cowplot::plot_grid
                           )
pdf("../fig/fig-5.pdf",w=12,h=6)
print(fig5)
tmp <- dev.off()
@
