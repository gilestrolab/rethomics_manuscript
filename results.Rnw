<<echo=FALSE, message=FALSE>>=
library(knitr)
opts_knit$set(root.dir = "results")
setwd("results")
@

\section*{Results}
%In order to illustrate the workflow of \texttt{rethomics}, we provide a simplified and reproducible example, which could be readily modified to suit more intricate cases.

In order to illustrate the usefulness of \texttt{rethomics}, we provide two examples.
The first one is a detailed and reproducible description of the loading and analysis activity data in the context of circadian rhythm, using DAM2 (Trikinetics Inc.) data.
The second one shows how \texttt{rethomics} integrates within \texttt{R} to perform a multi-scale analysis of a periodic behaviour, using continuous wavelet transform, on data generated with ethoscopes\cite{geissmann_ethoscopes_2017}.

\subsection*{Canonical circadian analysis in \emph{Drosophila}}
The \texttt{zeitgebr} package implements a comprehensive suite of methods to analyse circadian rhythms, 
including the computation of autocorrelograms, $\chi{}^2$\cite{sokolove_chi_1978} and Lomb-Scargle\cite{ruf_lomb-scargle_1999} periodograms,
and automatic peak detection.

The study of the rhythmical activity of fruit flies has played a crucial role in the development of circadian biology\cite{dubowy_circadian_2017}.
To date, most of the behavioural data used in the field is acquired through the Drosophila Activity Monitor System (DAMS).
The package \texttt{damr} was developed to import DAMS results in the \texttt{rethomics} framework, which we envision will be a common use case. 
To illustrate the ability of \texttt{rethomics} to analyse pre-existing results,
we gathered a subset of the data from a recent publication\cite{buhl_quasimodo_2016}, kindly made publicly available by the authors\cite{ogueta_ll_2018}.

Wild type flies are highly rhythmic in Light-Dark (LD) cycles and become arrhythmic in constant light (LL).
In their study, the authors gain understanding of the function of the molecular clock by showing that overexpression of the gene NKCC makes the flies rhythmic in LL,
and that the endogenous period in LL is longer than 24 hours.

Here, we guide the reader through the analysis of two of the genotypes employed in that study;
one control group (NKCC\textsuperscript{ox}/+, which is arrhythmic under LL) and one where NKCC\textsuperscript{ox} is overexpressed in clock neurons (TIM/NKCC\textsuperscript{ox}, which is rhythmic under LL).
In particular, we outline the necessary steps to analyse two repetitions of the same experiment in which a total of 58 animals were recorded for three to four days in LD and then subjected to constant light for six or seven days.
The \texttt{metadata.csv} file and all the associated result files can be downloaded at \href{https://zenodo.org/record/1172980}{https://zenodo.org/record/1172980}.

We start by downloading the data and extract the zip archive in our working directory.
Then, we load the necessary \texttt{rethomics} packages (see the webpage for installation instructions):

<<message=FALSE>>=
library(damr)      # input DAM data
library(zeitgebr)  # periodogram computation
library(sleepr)    # sleep analysis
library(ggetho)    # behaviour visualisation
@

Then, the metadata file is read and linked to the \texttt{.txt} result files.

<<cache=TRUE>>=
metadata <- link_dam_metadata("metadata.csv", ".")   # linking
# print(metadata)                                    # check metadata
dt <- load_dam(metadata)                             # loading
summary(dt)                                          # quick summary
@

\subsubsection*{Preprocessing}
Since the two original replicates do not have the same baseline duration and we want to analyse them together,
we align their respective times to the experimental perturbation: the transition from LD to LL ($t = 0$). 
This is achieved by subtracting the \texttt{baseline\_days} metavariable from the \texttt{t} variable.
This gives us an opportunity to illustrate the use \texttt{xmv()}, which expands metavariables as variables.
In addition, we use the \texttt{data.table} syntax to create, in place, a \texttt{moving} variable.
It is \texttt{TRUE} when \texttt{activity} is greater than zero and \texttt{FALSE} otherwise:

<<message=F, results="hide", cache=TRUE>>=
# baseline subtraction -- note the use of xmv
dt[,t := t - days(xmv(baseline_days))]
dt[, moving :=  activity > 0]  
@

<<cache=TRUE>>=
summary(dt)
@
The \texttt{id} is a long and exhaustive string of character, which incidentally 
makes it difficult to read and display as a label on a plot.
To address this issue, we create our own \texttt{label} metavariable, as the combination of a number and \texttt{genotype}.
In the restricted context of this analysis, \texttt{label} acts as a unique identifier.
Importantly, we also retain \texttt{id} as an \emph{unambiguous} unique identifier.
Indeed, two animals in separate experiments may have the same label, but different \texttt{id}s.
In addition, if the metadata changes -- for instance by the addition or removal of individuals -- the label is likely to change, not the \texttt{id}.
%,which could lead to confusion.




<<message=FALSE, results="hide", cache=TRUE>>=
dt[, label := interaction(1:.N, genotype), meta = T]
print(dt)
@


\subsubsection*{Curation}
It is important to visualise an overview of how each individual behaved and, if necessary, amend the metadata accordingly.
For this, we generate a tile plot (Fig~\ref{fig:fig-3}A).

\begin{figure}[!h]
%    \includegraphics[width=1\textwidth]{fig/fig-3.pdf}
	\caption{{\bf Experiment quality control.}
			Tile plot showing the fraction of time spent moving as a colour intensity.
			Each individual is represented by a row and time, on the x-axis, is binned in 30 minutes consecutive epochs.
			A: Uncurated raw data.
			B: Data after the curation step. Time was trimmed and data from dead animals removed. 
			The red `\textbf{+}' symbols show animals that were removed from the subsequent analysis as they did not survive five complete days in LL.}
	\label{fig:fig-3}
\end{figure}

<<cache=TRUE>>=
# make a ggplot object with label on the y and moving on the z axis
fig3A <- ggetho(dt, aes(y = label, z = moving)) +  
  # show data as a tile plot
  # that is z is a pixel whose intensity maps moving
  stat_tile_etho() +                  
  # add layers to draw annotations to show L and D phases
  # as white and black, respectively
  # the first layer is for the baseline (until t = 0)
  stat_ld_annotations(x_limits = c(dt[,min(t)], 0)) +
  # in the 2nd one, we start at 0 and use grey 
  # instead of black as we work in LL
  stat_ld_annotations(x_limits = c(0, dt[, max(t)]), 
                      ld_colours = c("white", "grey"))
@


The activity of dead or escaped animals is scored as long series of zeros,
which may be erroneously interpreted as inactivity (see, for instance, individual labelled \texttt{30} and \texttt{18} in Fig~\ref{fig:fig-3}A).
The \texttt{sleepr} package offers a tool to detect and remove such artefactual data.
It proceeds by detecting the first time an animal is immobile for more than 99~\% of the time (the default) for at least \texttt{time\_window} seconds and then discard any subsequent data.

<<cache=TRUE>>=
# remove data after death
dt <- curate_dead_animals(dt, moving, time_window = days(1.5))
@

In addition, we can trim the data to the same number of days across experiments and individuals.
<<cache=TRUE>>=
# filter dt between -2d and 6d
dt <- dt[t %between% days(c(-2, 6))]
# same as above
fig3B <- ggetho(dt, aes(y = label, z = moving)) +  
    stat_tile_etho() +                  
    stat_ld_annotations(x_limits = c(dt[, min(t)], 0)) +
    stat_ld_annotations(x_limits = c(0, dt[, max(t)]), 
                        ld_colours = c("white", "grey"))
@

For the purpose of this example, we also exclude animals that died prematurely, and keep only individuals that have lived for \emph{at least five days in LL}. An overview of the curate data can be visualised in Fig~\ref{fig:fig-3}B.

<<cache=TRUE, echo=FALSE>>=
# draw point for invalid animals
valid_dt <- dt[, .(valid = max(t) > days(5)), by = id]
valid_ids <- valid_dt[valid == T, id]
fig3B <- fig3B + geom_text(data = dt[!id %in% valid_ids,.(label), meta = T], aes(x = days(6), y = label), inherit.aes = F, colour = "red", label = "+", fontface = "bold")
@

<<cache=TRUE>>=
# for each id, we check for validity
valid_dt <- dt[, .(valid = max(t) > days(5)), by = id]
# a vector of all valid ids
valid_ids <- valid_dt[valid == T, id]
# filter dt with the valid ids
dt <- dt[id %in% valid_ids]
summary(dt)
@

Note that as a result, we now have \Sexpr{nrow(dt[meta=T])} `valid' individuals.


\subsubsection*{Double-plotted actograms}
`Double-plotted actograms' are a common choice to visualise the periodicity and rhythmicity in circadian experiments.
In  \nameref{S1-Fig}A, we show a double-plotted actogram for each animal.
A selected sample of four individuals for each genotype is shown in Fig~\ref{fig:fig-4}A.

<<cache=TRUE, warning=FALSE, result="hide", message=FALSE>>=
# we also show a subset of this figure in Fig 4A
figS1A <- ggetho(dt, aes(z = moving), multiplot = 2) +
            # one could also use stat_tile_etho
            stat_bar_tile_etho() + 
            # split plot by individual
            facet_wrap( ~ label, ncol = 4) +
            # rename the y axis
            scale_y_discrete(name = "Day")
@

<<cache=TRUE, echo=FALSE, warning=FALSE, message=FALSE, result="hide">>=
#fig_4_picked_labels = paste(c(5,10,33,39, 13,17,22,51), rep(c("NKCCOX/+", "Tim/NKCCOX"), each=4), sep=".")
helper_dt_picked_labs <- data.table(num = c(5,10,33,39, 13,17,22,51),
                                    genotype =  rep(c("NKCCOX/+", "Tim/NKCCOX"), each=4))
helper_dt_picked_labs[,label := interaction(num, genotype)]

  # add a bg that depends on labels
bg_layer =   geom_rect(data=helper_dt_picked_labs, aes(fill=genotype),
            xmin = -Inf,xmax = Inf,
            ymin = -Inf,ymax = Inf,
            alpha = 0.3, inherit.aes = F) 
    
fig_4_picked_labels = helper_dt_picked_labs[,label]



fig4A <- ggetho(dt[xmv(label) %in% fig_4_picked_labels],
						 aes(z = moving), multiplot = 2) +
  bg_layer+
	stat_bar_tile_etho() + 
	facet_wrap( ~ label, ncol = 4) +
	scale_y_discrete(name = "Day") +
  theme(strip.text = element_text(size = 11))

ylabs <- ggplot_build(fig4A)$layout$panel_ranges[[1]]$y.labels

new_labs <- ifelse(1:length(ylabs) %%2, ylabs, "")

fig4A <- fig4A + scale_y_discrete(name = "Day",
                                  labels = new_labs
                                  ) + stat_ld_annotations(ld_colours = c("white", "grey"))
@


\subsubsection*{Periodograms}
Ultimately, in order to quantify periodicity and rhythmicity, we compute periodograms.
Several methods are implemented in \texttt{zeitbebr}: $\chi{}^2$, Lomb-Scargle, autocorrelation 
and Fourier.
In this example, we generate $\chi{}^2$ periodograms and lay them out in a grid.
Periodograms for the subset of eight animals used in Fig~\ref{fig:fig-4}A is shown in Fig~\ref{fig:fig-4}B. 
See \nameref{S1-Fig}B for the visualisation of all individuals.

<<cache=TRUE>>=
# only the LL data
dt_ll <- dt[t > days(1)]
# compute chi square periodograms 
per_dt <- periodogram(moving, 
                    	dt_ll, 
                    	resample_rate = 1 / mins(10),
                    	FUN=chi_sq_periodogram)
                    	
per_dt <- find_peaks(per_dt)
# we also show a subset of this figure in supplementary materials
figS1B <- ggperio(per_dt, aes(y = power, peak = peak)) + 
                  # periododogram drawn as a line
                  geom_line() +
                  # the significance line in red
                  geom_line(aes(y = signif_threshold), colour = "red") + 
                  # point and text at the peak
                  geom_peak() + 
                  # divide plot by individual
                  facet_wrap( ~ label, ncol = 4) 
@



<<cache=TRUE, echo=FALSE, warning=FALSE>>=
fig4B <- ggperio(per_dt[xmv(label) %in% fig_4_picked_labels],
                      aes(y = power, peak = peak)) + 
            # periododogram drawn as a line
            geom_line() +
            bg_layer +
            # the significance line in red
            geom_line(aes(y = signif_threshold), colour = "red") + 
            # point and text at the peak
            geom_peak() + 
            # divide plot by individual
            facet_wrap( ~ label, ncol = 4) + 
            scale_y_continuous(name = "Power") +
            theme(strip.text = element_text(size = 11))

@



\begin{figure}[!h]
%	\includegraphics[width=1\textwidth]{fig/fig-4.pdf}
	\caption{{\bf Visualisation of the periodicity in the activity of eight selected animals.}
		A: Double-plotted actograms showing all activity during experiment.
		Time is defined relative to the transition from LD to LL (at day 0).
		B: $\chi{}^2$ periodograms over the LL part of the experiment matching the animals in A.
		The blue cross represents the highest peak (if present) above the significance threshold (red line).
		Titles on top of each facet refer to the label allocated to each individual.
		See \nameref{S1-Fig} for all \Sexpr{nrow(dt[meta=TRUE])} animals.
	}
	\label{fig:fig-4}
\end{figure}

\subsubsection*{Population statistics}

As shown in the original study\cite{buhl_quasimodo_2016}, double-plotted actograms and periodograms suggest that NKCC\textsuperscript{ox}/+ flies are mostly 
arhythmic in LL whilst Tim/NKCC\textsuperscript{ox} appear to have a long-period rhythm.
To visualise this difference at the population scale, we can plot an average periodogram (see Fig~\ref{fig:fig-5}A):

<<cache=TRUE, warning=FALSE,message=FALSE, result="hide">>=
# display periodogram 
fig5A <- ggperio(per_dt, aes(y = power - signif_threshold,
                             colour = genotype)) + 
          # periododogram shown as a line for population mean
          # and bootstrap error bars
          stat_pop_etho(method = ggplot2::mean_cl_boot) +
          # rename x and y axis 
          scale_y_continuous(name = "Relative power") + 
          scale_x_hours("Period")
@



\begin{figure}[!h]
%  	\includegraphics[width=1\textwidth]{fig/fig-5.pdf}
	\caption{{\bf Population statistics on circadian phenotype.}
			A: Average periodograms. 
			      The aggregated relative power of the periodogram of all animals.
			      The solid lines and the shaded areas show population means and their 95\% bootstrap confidence interval, respectively.
			B: Frequencies of rhythmic animals.
			      Number of rhythmic animals (\emph{i.e.} with a significant peak) in each genotypes.
			      Dark and clear fillings indicate rhythmic and arhythmic animals, respectively.
      C: Peak periodicity power and average.
			      Values of the peak period for animals with a significant peak (\emph{i.e.} rhythmic).
			      Individual animals are shown by dots whose size represent the relative power of the peak period.
			      The error bars are 95\% bootstrap confidence interval on the population mean.
			      }
	\label{fig:fig-5}
\end{figure}


To further quantify this difference, we opt to show the number of rhythmic animals -- \emph{i.e.} individuals for which a peak was found -- in each group (see Fig~\ref{fig:fig-5}B).
Then, we can compare the average value of the peak for the rhythmic animals (see Fig~\ref{fig:fig-5}C).
First of all, we compute a summary per individual (\texttt{by=id}):

<<cache=TRUE, warning=FALSE, results="hide">>=
summary_dt <- per_dt[, 
                .(
                  first_peak_period = period[peak == 1],
                  # {} can be used for tmp variables
                  first_peak_rel_power = {
                    signif = signif_threshold[peak == 1]
                    power = power[peak == 1]
                    power - signif
                  },
                  is_rhythmic = any(peak == 1)
                ),
                by=id]

# rejoin metadata
summary_dt <- rejoin(summary_dt)
@

\texttt{summary\_dt} is just a regular data frame with one row per individual, containing both metadata and our summary statistics. 
It can therefore be used directly by \texttt{ggplot}:

<<cache=TRUE, warning=FALSE, results="hide">>=
# standard ggplot
fig5B <- ggplot(summary_dt, aes(x = genotype,
                                fill = genotype,
                                alpha = is_rhythmic
                                )) +
              geom_bar(colour="black")

@

<<>>=
# standard ggplot
fig5C <- ggplot(summary_dt, aes(y = first_peak_period,
                                x = genotype)) + 
              # draw the mean of each genotype group
              stat_summary(fun.y = mean, geom = "point", shape=3) +
              # draw bootstrap confidence intervals
              stat_summary(fun.data = mean_cl_boot, geom = "errorbar") +
              # shows all individuals as points
              # the size of the point represents the power of the peak
              geom_jitter(aes(colour = genotype, 
                              size = first_peak_rel_power),
                              alpha = 0.67) +
              # We would like to show time in hours
              scale_y_hours("Period")
@


\texttt{R} provides one of the richest statistical toolboxes available.
Using base \texttt{R} we could perform a $\chi{}^2$ test on the number of rhythmic \emph{vs} arhythmic flies in both genotypes, or,
like in this case, fit a binomial generalised linear model:

<<>>=
fit <- glm(is_rhythmic ~ genotype, summary_dt, family = "binomial")
summary(fit)$coefficients
@

<<echo=FALSE>>=
str <- sapply(strsplit(format(summary(fit)$coefficients[2,4], scientific=TRUE, digits = 3), split="e"), function(x) paste0("$", x[1], " \\times 10^{", x[2], "}$"))
@

The result shows a strong positive effect of genotype Tim/NKCC\textsuperscript{ox} on the probability of being rhythmic ($p$-value \Sexpr{str}):

Lastly, we can generate a table that compute arbitrary population statistics for each genotype:
<<warning=FALSE>>=
result_dt <- 
  summary_dt[,
    .(
       mean_period = mean(first_peak_period, na.rm = T) / hours(1),
       sd_period = sd(first_peak_period, na.rm = T) / hours(1),
       percent_rhythmic = 100 * sum(is_rhythmic) / .N,
       n_rhythmic = sum(is_rhythmic),
       n = .N
     ),
    by = genotype
  ]
  
# to round all numeric columns  to two digits
result_dt[, lapply(.SD,
                   function(x) if(is.numeric(x)) round(x, 2) else x
                   )
           ]
@



The case study described so far shows how \texttt{rethomics} can be employed to generate publication-quality figures and state-of-the-art statistics.
We were able to comprehensively analyse the data from a circadian experiment with a few lines of code,
presenting a workflow that applies equally well to much larger datasets.


\subsection*{Multi-scale analysis of position}

One of the challenges of behaviour analysis is the `nesting' of events happening over different timescales.
In other words, a behavioural variable can be modulated by the circadian rhythm, but also by co-occurring ultradian and infradian rhythms.
For instance, an animal could have rhythmic bursts of locomotor activity recurring at high frequency (\emph{e.g.} 1~min), but also a circadian  (\emph{i.e.} 24~h) regulation of the same variable.
In this example, both rhythms happen at timescales separated by approximately three orders of magnitudes, which makes them difficult to visualise and integrate into the same analysis.
Being able to keep frequency information over multiple scales is however important in some cases.
In particular, when interested in the frequency modulation of a rhythm by another --
that is, if the periodicity of a high-frequency rhythm itself can be a function of a lower frequency one.
%For instance, the frequency of rhythmic activity bursts could itself be regulated by another rhythm such as the circadian rhythm.

The problem of understanding time series at different scales is not uncommon in fields such as economics\cite{aguiar-conraria_business_2011}, climate sciences\cite{lau_climate_1995} and ecology\cite{cazelles_wavelet_2008} where variables are governed by multiple underlying rhythms (\emph{e.g.} tidal, daily, yearly and multi-yearly).
One approach is to study a variable of interest in the time/period domain using, for instance, continuous wavelet transform (CWT)\cite{grossmann_decomposition_1984}.
In the context of chronobiology, CWT has been suggested as a tool to investigate ultradian rhythms \cite{leise_wavelet_2013}.

To illustrate how \texttt{rethomic} integrates with other packages and render such non-mainstream analysis possible,
we performed a wavelet analysis of the position of 80 naive fruit flies (40 females and 40 males) in their glass tubes.
We used the package \texttt{scopr}, part of \texttt{rethomics}, to load five days of ethoscope positional data, which we sampled at 0.1~Hz.
Our variable of interest is the position of animals in their tube (from the food end, $Position = 0$,  to the cotton end, $Position = 1$).
Fig~\ref{fig:fig-6}A-C shows the raw position data at two different scales for two representative animals.



\begin{figure}[!h]
	%  	\includegraphics[width=1\textwidth]{fig/fig-5.pdf}
	\caption{{\bf Wavelet analysis of positional data.}
		A: Raw position data for a representative female (top) and male (bottom) \emph{Drosophila} over five days, in black. 
		The thick coloured lines show the average position every two hours.
		The green rectangles in the background show the two time windows selected for B and C.
		B: Close up of A, showing position over one hour, starting at the beginning of the L phase of day 1.
		C: Close up of A, showing position over one hour, starting at the middle of the L phase of day 1.
		D: Continuous wavelet transform spectrogram for the two representative animals.
		E: Average spectrogram across 40 males and 40 females.
		In D and E, the lines on the right show the marginal power spectra corresponding to the shown spectrograms (average across all time).
		The male data was collected and described in our previous study \cite{geissmann_ethoscopes_2017} (controls in figure~5M-P) and the females data was acquired in parallel, in the same experimental conditions, but not previously published.
	}
	\label{fig:fig-6}
\end{figure}



In order to compute CWT, we used the \texttt{WaveletComp} package\cite{schmidbauer_waveletcomp_2018}.
We then averaged the result of the five consecutive days in the time/period domain over one circadian day both for the two representative animals (Fig~\ref{fig:fig-6}D)
and for the population(Fig~\ref{fig:fig-6}E).

As suggested by the slow oscillations of the mean position (Fig~\ref{fig:fig-6}A), we observe peaks in power corresponding to high-period (12~h and 24~h) rhythms.
In addition, a large amount of signal is detected for low-period (around 60~s) events -- 
likely corresponding to the position of animals walking along (back and forward) their tubes in a very paced manner.

Interestingly, in females, this low period pace appears to be frequency modulated during the L phase, suggesting a slower walking speed around ZT6~h.
In contrast, males display only a high-frequency rhythm around the phase transitions (L to D and D to L).
Surprisingly, the peak of high-frequency rhythm implies a faster pace in males (approximately 60~s) than in females (approximately 120~s) --
indicating that, when active, males walk faster than females. 

This non-exhaustive proof of principle illustrates how analysis of behavioural data can be taken further by adapting the wide range of numerical tools already available in the \texttt{R} ecosystem. 


<<r, eval=TRUE, echo=FALSE, message=FALSE, result="hide",cache=TRUE, warning=FALSE>>=
################################ CODE BELOW FOR COSMETIC ALTERATIONS OF FIGURES
library(cowplot)
label_size <- 24 # "A", "B" ...
my_theme <- theme(axis.title.y=element_blank(),
            axis.text.y=element_blank(),
            axis.ticks=element_blank(),
            axis.line = element_blank(),
            panel.border = element_blank(),
            legend.position="none")

legend <- fig3A + theme(axis.title=element_blank(),
                        axis.text.x=element_blank(),
                        axis.ticks=element_blank(),
                        axis.line = element_blank(),
                        axis.text.y = element_text(size=8),
                        #axis.ticks.y=element_blank(),
                        panel.border = element_blank(),
                        #legend.text = "moving",
                        legend.position="none") + 
                  coord_cartesian(xlim=-days(c(10, 9))) + scale_y_discrete(position = "right")

fig3 <- cowplot::plot_grid(
                          legend,
                          fig3A +  my_theme,
                          fig3B +  my_theme,
                          nrow=1,
                          labels=c("A", "", "B"),
                          rel_widths = c(1, 4, 4),
                          label_size = label_size,
                          axis="b",
                          align="h",
                          hjust=0, vjust=1.01
                          )
fill_legend <- 
  cowplot::plot_grid(NULL,
    cowplot::get_legend(
        fig3A + theme(legend.position = "bottom", legend.direction = "horizontal") + scale_fill_continuous(labels = scales::percent, name="Moving ", breaks=c(0,.5,1))
        ), NULL
    )
#?theme

fig3_final <- cowplot::plot_grid(fig3, fill_legend,nrow = 2, rel_heights = c(15,1))

pdf("../fig/fig-3.pdf",w=12,h=8)
print(fig3_final)
tmp  <- dev.off()

#=================================================
figS1A <- figS1A +  theme(strip.text.x = element_text(size =8))
figS1B <- figS1B +  theme(strip.text.x = element_text(size =8))

figS1 <- cowplot::plot_grid(
                          figS1A,
                          figS1B,
                          nrow=1,
                          labels=c( "A", "B"),
                          label_size = label_size,
                          align="v",
                          axis="b",
                          hjust=0, vjust=1.01
                          )

pdf("../fig/fig-S1.pdf",w=12,h=16)
print(figS1)
tmp <- dev.off()

#===================================================

fig4 <- cowplot::plot_grid(
				fig4A + theme(legend.position = "none"),
				fig4B+ theme(legend.position = "none"),
				nrow=1,
				labels=c("A", "B"),
				align="v",
				axis="b",
				label_size = label_size,
				hjust=0, vjust=1.01
)


fill_legend <- 
  cowplot::plot_grid(NULL,
    cowplot::get_legend(
        fig4A + theme(legend.position = "bottom", legend.direction = "horizontal") + scale_fill_discrete(name="Genotype "))
        )
#?theme


fig4_final <- cowplot::plot_grid(fig4, fill_legend,nrow = 2, rel_heights = c(15,1))
pdf("../fig/fig-4.pdf",w=12,h=4)
print(fig4_final)
tmp  <- dev.off()


#=================================================



fig5 <- cowplot::plot_grid(fig5A + theme(legend.position="none"),
                           fig5B + theme(legend.position="none") + scale_y_continuous(name="Number") + scale_x_discrete(name="Genotype"),
                           fig5C + theme(legend.position="none") + scale_x_discrete(name="Genotype"),
                           nrow=1,
                           label_size = label_size,
                           align = "hv",
                           axis="b",
                           labels=c( "A", "B", "C"),
                           hjust=0, vjust=1.01
                           #?cowplot::plot_grid
                           )

dummy <- ggplot(summary_dt, aes(is_rhythmic, first_peak_period, size= first_peak_power, fill= genotype, colour=genotype)) + 
    geom_bar(aes(x=genotype, alpha= ifelse(is_rhythmic, "Rhythmic", "Arhythmic"), fill=genotype), inherit.aes = F) + 
  geom_jitter(aes(is_rhythmic, first_peak_period, size=first_peak_rel_power), inherit.aes = F) +
   scale_fill_discrete(name="Genotype")+scale_size(name= "Peak relative power") +  scale_alpha_discrete(name= "") +
  theme(legend.position = "bottom")  + 
  guides(fill = guide_legend(order=1),
         alpha = guide_legend(order=2),
         size = guide_legend(order=3))

legend <- plot_grid(NULL, get_legend(dummy), NULL, nrow=1)

fig5_final <- cowplot::plot_grid(fig5, legend, nrow = 2, rel_heights = c(15,1))
pdf("../fig/fig-5.pdf",w=12,h=4)
print(fig5_final)
tmp <- dev.off()
@
